name: Continuous Deployment Pipeline

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:

    build:
     runs-on: ubuntu-latest
     steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: artolepisa.azurecr.io
          username: ${{ secrets.AzureAppService_ContainerUsername_4316a75011ad4fbf9a1532e89e7801df }}
          password: ${{ secrets.AzureAppService_ContainerPassword_61a0063606eb4aa3b144565a8f8f427c }}

      - name: Add Environment Variables to Dockerfile
        run: |
          sed -i '/^FROM/a ENV COSMOS_ENDPOINT=${{ secrets.COSMOS_ENDPOINT }}' $GITHUB_WORKSPACE/api/Dockerfile
          sed -i '/^FROM/a ENV COSMOS_KEY=${{ secrets.COSMOS_KEY }}' $GITHUB_WORKSPACE/api/Dockerfile
          sed -i '/^FROM/a ENV DATABASE_NAME=${{ secrets.DATABASE_NAME }}' $GITHUB_WORKSPACE/api/Dockerfile

      
      - name : Export new relic environment variables
        run: |
            export NEW_RELIC_LICENSE_KEY=${{ secrets.NEW_RELIC_LICENSE_KEY }}
            export NEW_RELIC_ACCOUNT_ID=${{ secrets.NEW_RELIC_ACCOUNT_ID }}
            export NEW_RELIC_API_KEY=${{ secrets.NEW_RELIC_API_KEY }}
            export NEW_RELIC_APP_NAME=${{ secrets.NEW_RELIC_APP_NAME }}
            echo "NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}" >> $GITHUB_ENV
            echo "NEW_RELIC_ACCOUNT_ID=${NEW_RELIC_ACCOUNT_ID}" >> $GITHUB_ENV
            echo "NEW_RELIC_API_KEY=${NEW_RELIC_API_KEY}" >> $GITHUB_ENV
            echo "NEW_RELIC_APP_NAME=${NEW_RELIC_APP_NAME}" >> $GITHUB_ENV

      - name: Build and Publish new relic image
        run: |
          docker build -t artolepisa.azurecr.io/python_newrelic:latest ./newrelic/
          docker push artolepisa.azurecr.io/python_newrelic:latest

      - name: Build and Publish Docker Image
        run: |
          docker build --build-arg base_image=artolepisa.azurecr.io/python_newrelic:latest -t artolepisa.azurecr.io/artolepisa:latest $GITHUB_WORKSPACE/api
          docker push artolepisa.azurecr.io/artolepisa:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        environment:
          url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
          name: ${{ github.event.inputs.environment }}
        steps:
        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v2
          with:
            app-name: 'artolepisa-webapp-service'
            slot-name: 'production' 
            publish-profile: ${{ secrets.AzureAppService_PublishProfile_eaa367b64e8643c9a05e2a53a0a0ff36 }}
            images: 'artolepisa.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_4316a75011ad4fbf9a1532e89e7801df }}:latest'
          env:
              COSMOS_ENDPOINT: ${{ secrets.COSMOS_ENDPOINT }}
              COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
              DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
              NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}
              NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
              NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
              NEW_RELIC_APP_NAME: ${{ secrets.NEW_RELIC_APP_NAME }}
