name: build-artifact

on:
  workflow_call:
    inputs:
      image_name:
        description: "Name of the Docker image"
        required: true
        type: string
      registry_name:
        description: "Container registry URL using Azure Container Registry"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Generate Semantic Version
        id: semver
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          major_pattern: "feat"
          minor_pattern: "fix"
          use_branches: true
          branch: "develop"
          bump_each_commit: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log Version Number
        run: |
            echo "Generated version: ${{ steps.semver.outputs.version }}"
        env:
          VERSION: ${{ steps.semver.outputs.version }}

      - name: Create Release Branch
        run: |
          git checkout -b release/${{ steps.semver.outputs.version }}
          git tag ${{ steps.semver.outputs.version }}
          git push origin release/${{ steps.semver.outputs.version }}

      - name: Checkout Release Branch # Ensure we are on the release branch
        run: |
          git fetch --all
          git checkout release/${{ steps.semver.outputs.version }}

      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry_name }}.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Add Environment Variables to Dockerfile
        run: |
          sed -i '/^FROM/a ENV COSMOS_ENDPOINT=${{ secrets.COSMOS_ENDPOINT }}' $GITHUB_WORKSPACE/api/Dockerfile
          sed -i '/^FROM/a ENV COSMOS_KEY=${{ secrets.COSMOS_KEY }}' $GITHUB_WORKSPACE/api/Dockerfile

      - name: Copy pyproject.toml to api directory
        run: |
          cp pyproject.toml api/

      - name: Build and Publish Docker Image
        run: |
          docker build -t ${{ inputs.registry_name }}.azurecr.io/${{ inputs.image_name }}:${{ steps.semver.outputs.version }} ./api/
          docker push ${{ inputs.registry_name }}.azurecr.io/${{ inputs.image_name }}:${{ steps.semver.outputs.version }}
